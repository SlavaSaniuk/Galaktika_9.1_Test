.var
  strNN              // номер страницы
, kounter            // счетчик строк на странице
, fixkol             // число строк на странице
, breakPage          // разрыв страницы
, wParam             // параметр отчета
, wShortAutoTR       // владелец автомобиля
, wTTNPrimaryList    // суммы прописью на первой странице
: word;

  Название_Доп       // дополнительная информация по МЦ
, КодМЦ_Доп          // бар-код МЦ
, ChrBreakPage       // символ разрыва страницы
, OsnOtpEd           // общая отпускная единица
: string

!в отчетах в валюте документа также используются значения этих переменных
  СтНДСНац           // сумма НДС по позиции
, СтНацБН            // стоимость позиции без НДС
, СтНацСН            // стоимость позиции с налогами
, sumkolf            // кол-во грузовых мест по накладной
, АНДСНац            // сумма НДС по накладной
, АстНацБН           // стоимость всех позиций по накладной без НДС
, АстНацСН           // стоимость всех позиций по накладной с налогами
, АСтНацСБН          // стоимость всех позиций по накладной без или с НДС в зависимости от типа
, SumОтпЕд           // итоговое количество
, strАНДСНац         // сумма НДС по странице
, strАСтНацБН        // стоимость всех позиций по странице
, strАСтНацСН        // стоимость всех позиций по странице
, strАСтНацСБН       // стоимость всех позиций по странице
, sumves             // масса позиций по накладной
, strАКолФ           // кол-во грузовых мест по странице
, strАКолВес         // масса позиций по странице
, strОтпЕд           // количество МЦ по странице
, PrSkidkaDO         // скидка по позиции из ДО
: double;

  CheckKol           // для форм с приложениями
, PrnOK              // для вывода позиций
, bDocEveryStr       // вывод документов следуемых с грузом
, bBarKodMC          // вывод бар-кода МЦ
, isRozn911          // розничная накладная
, isValDoc           // накладная в валюте документа
, DopOtpRaz          // дополнительные поля для "Отпуск разрешил"
 #ifdef _TTN_ALC_
, PrnAlc             // признак алкогольных накладных
 #end
, isNumNakl          // проверка вывода на печать поля "Номер накладной"
, isNumOsnOtp        // проверка вывода на печать поля "Основание для отпуска"
, isReklNaklNum      // печатать в примечании номер рекламационной накладной
: boolean;

.endvar
.begin

#ifdef _TTN_DOC_600_
  #define _TTN_SKL_ORG_
#end
#ifdef _TTN_DOC_ROZN_600_
  #define _TTN_SKL_ORG_
#end

#ifdef _IN_VAL_DOC_
  Cena_PrR := Cena_PrV;  // число знаков после запятой в суммах
#end
#ifdef _TTN_ALC_
  PrnAlc := False;
#end

  wTTNPrimaryList := wGetTune ('Doc.SD.PrnNakl.TTNPrimaryList');
  wShortAutoTR    := wGetTune ('Doc.SD.PrnNakl.ShortAutoTR');
  bDocEveryStr    := boGetTune('Doc.SD.PrnNakl.DocOfGood');
  bBarKodMC       := boGetTune('Doc.SD.PrnNakl.BarKodMC');
  isNumNakl       := boGetTune('Doc.SD.PrnNakl.NumNakl');
  isNumOsnOtp     := wGetTune ('Doc.SD.PrnNakl.OsnOtp') <> 0;
  isReklNaklNum   := boGetTune('Doc.ReklNaklNum');

  // розничные накладные
  if (тип_родительского_документа = 911) or
     (тип_родительского_документа = 912)
    isRozn911 := True
  else
    isRozn911 := False;

  // специфические реализации форм
  wParam := 0;
  isValDoc := False;

#ifdef _IN_VAL_DOC_
  // накладная в валюте документа
  wParam   := wParam or 1;
  isValDoc := True;
#end

#ifdef _TTN_ALC_
  // алкогольная накладная
  wParam := wParam or 2;
#end

#ifdef _PROCNAC_
  // форма в RTF-формате
  wParam := wParam or 4;
#end

#ifdef _TTN_DOC_ROZN_
  // розничная накладная
  wParam := wParam or 8;
#end

#ifdef _TTN_2009R_
  // розничная форма с налогом с продаж
  wParam := wParam or 16;
#end

#ifdef _TTN_SKL_ORG_
  // накладная на внутреннее перемещение
  wParam := wParam or 32;
#end

#ifdef USE_SEP_SYMBOL
  // использовать разделитель
  wParam := wParam or 64;
#end

  // инициализация переменных
  oPrnSoprFun.Init(wParam, wShortAutoTR, wRoundMass2, bAutoGrM, bBarKodMC, isRozn911, Massa_Tn, Massa_Kg, Massa_Gr, Cena_Pr, Cena_PrR, NDS_St, RoundGrm);

#ifdef _TTN_SKL_ORG_
  #undef _TTN_SKL_ORG_
#end

 DopOtpRaz := boGetTune('DOC.SD.PRNNAKL.OTPRAZTTN');
end.
